AWSTemplateFormatVersion: "2010-09-09"
Description: "Stateful stack"

Parameters:
  ServiceName:
    Type: String
    Description: Service name
    Default: mache-viewer
  Phase:
    Type: String
    Description: Phase
    AllowedValues:
      - ci
      - dev
      - prd
  APIGatewayId:
    Type: String
    Description: API Gateway
    Default: 7ss5vqvsf8

Mappings:
  DomainName:
    ap-northeast-1:
      prd: mache-viewer.4mo.co
      dev: mache-viewer-dev.4mo.co
      ci: mache-viewer-ci.4mo.co

Resources:
  CloudFrontDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Enabled: true
        PriceClass: PriceClass_100
        DefaultRootObject: index.html
        CNAMEs:
          - !FindInMap [DomainName, !Ref AWS::Region, !Ref Phase]
        Origins:
          - Id: !Sub s3-${ServiceName}-cmn-web
            DomainName: !Sub ${ServiceName}-cmn-web.s3.amazonaws.com
            S3OriginConfig:
              OriginAccessIdentity: ''
            OriginPath: !Sub /${Phase}/web
            OriginAccessControlId: !GetAtt OriginAccessControl.Id
          - Id: !Sub apigw-${ServiceName}-${Phase}-api
            DomainName: !Sub ${APIGatewayId}.execute-api.${AWS::Region}.${AWS::URLSuffix}
            CustomOriginConfig:
              HTTPSPort: 443
              OriginProtocolPolicy: https-only
            OriginPath: /live
        DefaultCacheBehavior:
          TargetOriginId: !Sub s3-${ServiceName}-cmn-web
          ForwardedValues:
            QueryString: false
            Cookies:
              Forward: 'none'
          ViewerProtocolPolicy: redirect-to-https
          CachePolicyId: 658327ea-f89d-4fab-a63d-7e88639e58f6 # CachingOptimized
          OriginRequestPolicyId: acba4595-bd28-49b8-b9fe-13317c0390fa # UserAgentRefererHeaders
          Compress: true
        CacheBehaviors:
          - PathPattern: "/v*"
            TargetOriginId: !Sub apigw-${ServiceName}-${Phase}-api
            OriginRequestPolicyId: acba4595-bd28-49b8-b9fe-13317c0390fa # UserAgentRefererHeaders
            CachePolicyId: !Ref CloudFrontCachePolicyAPI
            ViewerProtocolPolicy: redirect-to-https
        ViewerCertificate:
          AcmCertificateArn: !Sub arn:aws:acm:us-east-1:${AWS::AccountId}:certificate/407e1f5b-0d87-4de3-8341-874d4ed32651
          MinimumProtocolVersion: "TLSv1.2_2021"
          SslSupportMethod: sni-only
      Tags:
        - Key: Service
          Value: !Ref ServiceName
        - Key: Phase
          Value: !Ref Phase

  CloudFrontCachePolicyAPI:
    Type: AWS::CloudFront::CachePolicy
    Properties:
      CachePolicyConfig:
        Name: !Sub ${ServiceName}-${Phase}-CP-API
        DefaultTTL: 0
        MaxTTL: 86300
        MinTTL: 0
        ParametersInCacheKeyAndForwardedToOrigin:
          CookiesConfig:
            CookieBehavior: none
          EnableAcceptEncodingBrotli: true
          EnableAcceptEncodingGzip: true
          HeadersConfig:
            HeaderBehavior: none
          QueryStringsConfig:
            QueryStringBehavior: all

  OriginAccessControl:
    Type: AWS::CloudFront::OriginAccessControl
    Properties:
      OriginAccessControlConfig:
        Description: !Sub 'OAC of ${ServiceName}-cmn-web. Created by ${AWS::StackName}'
        Name: !Sub ${ServiceName}-cmn-web-OAC-${Phase}
        OriginAccessControlOriginType: s3
        SigningBehavior: always
        SigningProtocol: sigv4

  S3BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Sub ${ServiceName}-cmn-web
      PolicyDocument:
        Statement:
          - Action: s3:GetObject
            Effect: Allow
            Resource: !Sub arn:${AWS::Partition}:s3:::${ServiceName}-cmn-web/*
            Principal:
              Service: cloudfront.amazonaws.com
            Condition:
              StringEquals:
                AWS:SourceArn: !Sub arn:${AWS::Partition}:cloudfront::${AWS::AccountId}:distribution/${CloudFrontDistribution}
          - Action: s3:ListBucket
            Effect: Allow
            Resource: !Sub arn:${AWS::Partition}:s3:::${ServiceName}-cmn-web
            Principal:
              Service: cloudfront.amazonaws.com
            Condition:
              StringEquals:
                AWS:SourceArn: !Sub arn:${AWS::Partition}:cloudfront::${AWS::AccountId}:distribution/${CloudFrontDistribution}

Outputs:
  CloudFrontDistributionId:
    Description: CloudFront distribution
    Value: !Ref CloudFrontDistribution
  CloudFrontDistributionDomainName:
    Description: CloudFront distribution domain name
    Value: !GetAtt CloudFrontDistribution.DomainName
